{
  "openapi": "3.0.1",
  "info": {
    "title": "Mavoix Web API",
    "description": "This is a Propotype for Lambda API",
    "termsOfService": "https://mavoix.in",
    "contact": {
      "email": "info@mavoix.in"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://5h92ecflaa.execute-api.ap-south-1.amazonaws.com/v0"
    },
    {
      "url": "http://5h92ecflaa.execute-api.ap-south-1.amazonaws.com/v0"
    }
  ],
  "tags": [
    {
      "name": "DB operations",
      "description": "All Database operations"
    },
    {
      "name": "admin",
      "description": "Admin credential operations"
    }
  ],
  "paths": {
    "/db/{collection_identifier}": {
      "get": {
        "tags": [
          "DB operations"
        ],
        "summary": "Fetch documents from {Collection identifier}",
        "operationId": "fetchDocuments",
        "parameters": [
          {
            "name": "collection_identifier",
            "in": "path",
            "description": "Collection identifier of DB and collection",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "to specify the required parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit output to n documents",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "To skip n documents",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "DB operations"
        ],
        "summary": "Add a new document to {Collection identifier}",
        "operationId": "addDocument",
        "parameters": [
          {
            "name": "collection_identifier",
            "in": "path",
            "description": "Collection identifier of DB and collection",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Document to add in collection",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Career"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Career"
              }
            }
          },
          "required": true
        },
        "responses": {
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/db/{collection_identifier}/{uid}": {
      "get": {
        "tags": [
          "DB operations"
        ],
        "summary": "Fetch documents from {Collection identifier}",
        "operationId": "fetchDocument",
        "parameters": [
          {
            "name": "collection_identifier",
            "in": "path",
            "description": "Collection identifier of DB and collection",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "description": "Collection identifier of DB and collection",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Career"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DB operations"
        ],
        "summary": "Update an existing document",
        "operationId": "updateDoc",
        "parameters": [
          {
            "name": "collection_identifier",
            "in": "path",
            "description": "Collection identifier to identify the collection",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "description": "UID of document",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Document that needs to be updated ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Career"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Career"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Pet not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "DB operations"
        ],
        "summary": "Deleting an existing document",
        "operationId": "DeleteDoc",
        "parameters": [
          {
            "name": "collection_identifier",
            "in": "path",
            "description": "Collection identifier to identify the collection",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "description": "UID of document",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Pet not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "patch": {
        "tags": [
          "DB operations"
        ],
        "summary": "Update an existing document",
        "operationId": "updateDoc2",
        "parameters": [
          {
            "name": "collection_identifier",
            "in": "path",
            "description": "Collection identifier to identify the collection",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "description": "UID of document",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Document that needs to be updated ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Career"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Career"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Pet not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    }
  },
  "components": {
    "schemas": {
      "Career": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "format": "string"
          },
          "mobile": {
            "type": "string",
            "format": "string"
          },
          "oppertunity": {
            "type": "string",
            "format": "string"
          },
          "u_id": {
            "type": "string",
            "format": "string"
          }
        }
      },
      "MongoCredential": {
        "type": "object",
        "properties": {
          "collection_dentifier": {
            "type": "string",
            "format": "string"
          },
          "collection": {
            "type": "string",
            "format": "string"
          },
          "lookup_value": {
            "type": "string",
            "format": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    }
  }
}
